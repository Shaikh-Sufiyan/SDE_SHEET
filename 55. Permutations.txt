class Solution {
    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        allPermute(0,nums,ans);
        return ans;
    }
    
    public void allPermute(int index, int[] nums, List<List<Integer>> ans) {
        if(index == nums.length) {
            //Integer[] nums1 = Arrays.stream(nums).boxed().toArray(Integer[]::new);
            //ans.add(Arrays.asList(nums1));
            ArrayList<Integer> ds = new ArrayList<>();
            for(int i : nums)
                ds.add(i);
            ans.add(ds);
            return;
        }
        for(int i = index; i < nums.length; i++) {
            swap(nums,index,i);
            allPermute(index + 1,nums,ans);
            swap(nums,index,i);
        }
    }
    
    public void swap(int[] nums, int index, int i) {
        int temp = nums[i];
        nums[i] = nums[index];
        nums[index] = temp;
    }
}