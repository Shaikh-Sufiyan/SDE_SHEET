Using Array(for better approach refer self placed course)

class MyQueue {

    int front, rear;
	int arr[] = new int[100005];

    MyQueue()
	{
		front=0;
		rear=0;
	}
	
	//Function to push an element x in a queue.
	void push(int x)
	{
	    arr[rear++] = x;
	} 

    //Function to pop an element from queue and return that element.
	int pop()
	{
		return rear == front ? -1 : arr[front++];
	} 
}

Using LinkedList

class MyQueue
{
    QueueNode front, rear;
    MyQueue() {
        front = rear = null;
    }
    
    //Function to push an element into the queue.
	void push(int a)
	{
        if(front == null && rear == null) {
            front = new QueueNode(a);
            rear = front;
            return;
        }
        rear.next = new QueueNode(a);
        rear = rear.next;
	}
	
    //Function to pop front element from the queue.
	int pop()
	{
        if(front == null)
            return -1;
        int res = front.data;
        front = front.next;
        if(front == null)
            rear = null;
        return res;
	}
}



