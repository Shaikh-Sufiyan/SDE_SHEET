class Solution
{
    //Function to find the maximum profit and the number of jobs done.
    int[] JobScheduling(Job arr[], int n)
    {
        Arrays.sort(arr, (a,b) -> b.profit - a.profit);
        int max_deadLine = Integer.MIN_VALUE;
        for(int i = 0; i < n; i++) {
            max_deadLine = Math.max(arr[i].deadline,max_deadLine);
        }
        int[] visited = new int[max_deadLine + 1];
        Arrays.fill(visited,-1);
        int count_jobs = 0;
        int max_profit = 0;
        for(int i = 0; i < n; i++) {
            for(int j = arr[i].deadline; j > 0; j--) {
                if(visited[j] == -1) {
                    visited[j] = arr[i].id;
                    count_jobs++;
                    max_profit += arr[i].profit;
                    break;
                }
            }
        }
        return new int[]{count_jobs,max_profit};
    }
}