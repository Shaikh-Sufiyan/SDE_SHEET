/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseKGroup(ListNode head, int k) {
        ListNode prev = new ListNode(0);
        ListNode root = prev;
        ListNode current = head;
        while(current != null) {
            ListNode tail = current;
            int n = 0;
            while(current != null && n != k) {
                current = current.next;
                n++;
            }
            if(n != k) {
                prev.next = tail;
            }
            else {
                prev.next = reverse(tail,k);
                prev = tail;
            }
        }
        return root.next;
    }
    public static ListNode reverse(ListNode head, int k) {
        ListNode prev = null;
        while(head != null && k-- > 0) {
            ListNode temp = head.next;
            head.next = prev;
            prev = head;
            head = temp;
        }
        return prev;
    }
}