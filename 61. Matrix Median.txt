public class Solution {
    public int findMedian(ArrayList<ArrayList<Integer>> A) {
        int low = Integer.MIN_VALUE;
        int high = Integer.MAX_VALUE;
        int n = A.size();
        int m = A.get(0).size();
        while(low <= high) {
            int mid = (low + high) / 2;
            int count = 0;
            for(int i = 0; i < n; i++) {
                count += countNumberGEmid(A.get(i),mid);
            }
            if(count <= (n * m) / 2)
                low = mid + 1;
            else
                high = mid - 1;
        }
        return low;
    }

    public int countNumberGEmid(ArrayList<Integer> A, int mid) {
        int low = 0;
        int high = A.size() - 1;
        while(low <= high) {
            int m = (low + high) / 2;
            if(A.get(m) <= mid)
                low = m + 1;
            else    
                high = m - 1;
        }
        return low;
    }
}
