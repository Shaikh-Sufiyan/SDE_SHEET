/************************************************************

    Following is the TreeNode class structure:

    class BinaryTreeNode {
		int val;
		BinaryTreeNode left;
		BinaryTreeNode right;

		BinaryTreeNode(int val) {
			this.val = val;
			this.left = null;
			this.right = null;
		}
	}

************************************************************/
import java.util.*;
public class Solution {
    
    static class Pair {
        int col;
        BinaryTreeNode node;
        Pair(int col, BinaryTreeNode node) {
            this.col = col;
            this.node = node;
        }
    }
	public static ArrayList<Integer> getTopView(BinaryTreeNode root) {
		ArrayList<Integer> result = new ArrayList<>();
        if(root == null)
            return result;
        TreeMap<Integer, Integer> map = new TreeMap<>();
        Queue<Pair> q = new LinkedList<>();
        q.offer(new Pair(0, root));
        while(!q.isEmpty()) {
            Pair pair = q.poll();
            int col = pair.col;
            BinaryTreeNode current = pair.node;
            if(current.left != null)
                q.offer(new Pair(col - 1, current.left));
            if(current.right != null)
                q.offer(new Pair(col + 1, current.right));
            if(!map.containsKey(col))
                map.put(col, current.val);
        }
        for(Integer i : map.values()) {
            result.add(i);
        }
        return result;
	}
}